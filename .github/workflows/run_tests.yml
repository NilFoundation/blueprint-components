name: Run tests

on:
  # Triggers the workflow on pull request events but only for the master branch
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SUITE_REPO: "NilFoundation/crypto3"
  LIB_NAME: "blueprint"
  CACHE_NAME: "blueprint-job-cache"

jobs:
  handle-syncwith:
    if: github.event_name == 'pull_request'
    name: Call Reusable SyncWith Handler
    uses: NilFoundation/ci-cd/.github/workflows/reusable-handle-syncwith.yml@v1
    with:
      ci-cd-ref: 'v1'
    secrets: inherit

  build-and-test:
    needs: [ handle-syncwith ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      # https://github.com/actions/checkout/issues/1552
      - name: Clean up after previous checkout
        run: chmod +w -R ${GITHUB_WORKSPACE}; rm -rf ${GITHUB_WORKSPACE}/*;

      - name: Checkout Blueprint
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Checkout submodules to specified refs
        if: inputs.submodules-refs != ''
        uses: NilFoundation/ci-cd/actions/recursive-checkout@v1.2.1
        with:
          refs: ${{ inputs.submodules-refs }}
          paths: |
            ${{ github.workspace }}/**
            !${{ github.workspace }}/
            !${{ github.workspace }}/**/.git/**

      - uses: cachix/install-nix-action@v23
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Configure Nix
        run: |
          mkdir -p ~/.config/nix
          echo "extra-experimental-features = nix-command flakes" > ~/.config/nix/nix.conf

      - name: Run checks
        run: nix flake -L check .?submodules=1#
        env:
          NIX_CONFIG: |
            cores = 2
            max-jobs = 2

      - name: Build and run tests
        env:
          CMAKE_ARGS: "
            -DCMAKE_CXX_STANDARD=17
            -DCMAKE_BUILD_TYPE=Debug
            -DBUILD_SHARED_LIBS=FALSE
            -DENABLE_TESTS=TRUE
            -DCMAKE_C_COMPILER=clang
            -DCMAKE_CXX_COMPILER=clang++
            ${{ matrix.add-args || ''}}"
        run: |
          ls -l -a
          nix build -L ?submodules=1#zkllvm-blueprint
          ls -l -a
          ls -l ./result/
          results_dir="./results"
          mkdir -p "$results_dir"
          cp -r ./result/* "$results_dir/$check_name"
          rm result

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        with:
          check_name: "Linux Test Results"
          files: "results/**/*.xml"
          comment_mode: ${{ github.event.pull_request.head.repo.fork && 'off' || 'always' }} # Don't create PR comment from fork runs
          action_fail_on_inconclusive: true # fail, if no reports
